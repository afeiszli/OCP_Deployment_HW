apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    name: tasks-pipeline
  name: tasks-pipeline
spec:
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        try {
           timeout(time: 30, unit: 'MINUTES') {
              node() {
                  stage('Build Tasks') {
                    openshift.withCluster() {
                       openshift.withProject('tasks-build') {
                          def bld = openshift.startBuild('openshift-tasks')
                          bld.untilEach {
                            return it.object().status.phase == "Running"
                          }
                          bld.logs('-f')
                       }
                    }
                  }
                  stage('Deploy to Dev') {
                    openshift.withCluster() {
                      openshift.withProject('tasks-dev') {
                        def dc = openshift.selector('dc', 'openshift-tasks')
                        dc.rollout().latest()
                      }
                    }
                  }
                  stage('Deploy to Test') {
                    openshift.withCluster() {
                      openshift.withProject('tasks-test') {
                        def dc = openshift.selector('dc', 'openshift-tasks')
                        dc.rollout().latest()
                      }
                    }
                  }
                  stage('Deploy to Prod') {
                    openshift.withCluster() {
                      openshift.withProject('tasks-prod') {
                        def dc = openshift.selector('dc', 'openshift-tasks')
                        dc.rollout().latest()
                      }
                    }
                  }
                }
           }
        } catch (err) {
           echo "in catch block"
           echo "Caught: ${err}"
           currentBuild.result = 'FAILURE'
           throw err
        }
    type: JenkinsPipeline
